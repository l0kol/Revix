{"abi":[{"type":"function","name":"createCollection","inputs":[{"name":"spgNftInitParams","type":"tuple","internalType":"struct ISPGNFT.InitParams","components":[{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"baseURI","type":"string","internalType":"string"},{"name":"contractURI","type":"string","internalType":"string"},{"name":"maxSupply","type":"uint32","internalType":"uint32"},{"name":"mintFee","type":"uint256","internalType":"uint256"},{"name":"mintFeeToken","type":"address","internalType":"address"},{"name":"mintFeeRecipient","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"},{"name":"mintOpen","type":"bool","internalType":"bool"},{"name":"isPublicMinting","type":"bool","internalType":"bool"}]}],"outputs":[{"name":"spgNftContract","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"mintAndRegisterIp","inputs":[{"name":"spgNftContract","type":"address","internalType":"address"},{"name":"recipient","type":"address","internalType":"address"},{"name":"ipMetadata","type":"tuple","internalType":"struct WorkflowStructs.IPMetadata","components":[{"name":"ipMetadataURI","type":"string","internalType":"string"},{"name":"ipMetadataHash","type":"bytes32","internalType":"bytes32"},{"name":"nftMetadataURI","type":"string","internalType":"string"},{"name":"nftMetadataHash","type":"bytes32","internalType":"bytes32"}]},{"name":"allowDuplicates","type":"bool","internalType":"bool"}],"outputs":[{"name":"ipId","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"registerIp","inputs":[{"name":"nftContract","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"},{"name":"ipMetadata","type":"tuple","internalType":"struct WorkflowStructs.IPMetadata","components":[{"name":"ipMetadataURI","type":"string","internalType":"string"},{"name":"ipMetadataHash","type":"bytes32","internalType":"bytes32"},{"name":"nftMetadataURI","type":"string","internalType":"string"},{"name":"nftMetadataHash","type":"bytes32","internalType":"bytes32"}]},{"name":"sigMetadata","type":"tuple","internalType":"struct WorkflowStructs.SignatureData","components":[{"name":"signer","type":"address","internalType":"address"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"signature","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"ipId","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"setNftContractBeacon","inputs":[{"name":"newNftContractBeacon","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"upgradeCollections","inputs":[{"name":"newNftContract","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"CollectionCreated","inputs":[{"name":"spgNftContract","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createCollection((string,string,string,string,uint32,uint256,address,address,address,bool,bool))":"e80fe52f","mintAndRegisterIp(address,address,(string,bytes32,string,bytes32),bool)":"f1c42a22","registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))":"4e8c4624","setNftContractBeacon(address)":"4f775e16","upgradeCollections(address)":"845fd92b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spgNftContract\",\"type\":\"address\"}],\"name\":\"CollectionCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"maxSupply\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"mintFeeToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mintFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"mintOpen\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isPublicMinting\",\"type\":\"bool\"}],\"internalType\":\"struct ISPGNFT.InitParams\",\"name\":\"spgNftInitParams\",\"type\":\"tuple\"}],\"name\":\"createCollection\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"spgNftContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spgNftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"ipMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"ipMetadataHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"nftMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"nftMetadataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct WorkflowStructs.IPMetadata\",\"name\":\"ipMetadata\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"allowDuplicates\",\"type\":\"bool\"}],\"name\":\"mintAndRegisterIp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"ipMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"ipMetadataHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"nftMetadataURI\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"nftMetadataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct WorkflowStructs.IPMetadata\",\"name\":\"ipMetadata\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct WorkflowStructs.SignatureData\",\"name\":\"sigMetadata\",\"type\":\"tuple\"}],\"name\":\"registerIp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"ipId\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftContractBeacon\",\"type\":\"address\"}],\"name\":\"setNftContractBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNftContract\",\"type\":\"address\"}],\"name\":\"upgradeCollections\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CollectionCreated(address)\":{\"params\":{\"spgNftContract\":\"The address of the SPGNFT collection.\"}}},\"kind\":\"dev\",\"methods\":{\"createCollection((string,string,string,string,uint32,uint256,address,address,address,bool,bool))\":{\"params\":{\"spgNftInitParams\":\"The init params for the SPGNFT collection. See {ISPGNFT-InitParams}.\"},\"returns\":{\"spgNftContract\":\"The address of the newly created SPGNFT collection.\"}},\"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32),bool)\":{\"details\":\"Requires caller to have the minter role or the SPG NFT to allow public minting.\",\"params\":{\"allowDuplicates\":\"Set to true to allow minting an NFT with a duplicate metadata hash. If a duplicate is found, returns existing token Id and IP Id instead of minting/registering a new one.\",\"ipMetadata\":\"OPTIONAL. The desired metadata for the newly minted NFT and registered IP.\",\"recipient\":\"The address of the recipient of the minted NFT.\",\"spgNftContract\":\"The address of the SPGNFT collection.\"},\"returns\":{\"ipId\":\"The ID of the registered IP.\",\"tokenId\":\"The ID of the newly minted NFT.\"}},\"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))\":{\"params\":{\"ipMetadata\":\"OPTIONAL. The desired metadata for the newly registered IP.\",\"nftContract\":\"The address of the NFT collection.\",\"sigMetadata\":\"OPTIONAL. Signature data for setAll (metadata) for the IP via the Core Metadata Module.\",\"tokenId\":\"The ID of the NFT.\"},\"returns\":{\"ipId\":\"The ID of the newly registered IP.\"}},\"setNftContractBeacon(address)\":{\"details\":\"Restricted to be only callable by the protocol admin and upgrader.\",\"params\":{\"newNftContractBeacon\":\"The address of the new NFT contract beacon.\"}},\"upgradeCollections(address)\":{\"details\":\"Restricted to be only callable by the protocol admin and upgrader.\",\"params\":{\"newNftContract\":\"The address of the new NFT contract implementation.\"}}},\"title\":\"Registration Workflows Interface\",\"version\":1},\"userdoc\":{\"events\":{\"CollectionCreated(address)\":{\"notice\":\"Event emitted when a new NFT collection is created.\"}},\"kind\":\"user\",\"methods\":{\"createCollection((string,string,string,string,uint32,uint256,address,address,address,bool,bool))\":{\"notice\":\"Creates a new NFT collection to be used by SPG.\"},\"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32),bool)\":{\"notice\":\"Mint an NFT from a SPGNFT collection and register it with metadata as an IP.\"},\"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))\":{\"notice\":\"Registers an NFT as IP with metadata.\"},\"setNftContractBeacon(address)\":{\"notice\":\"Sets the NFT contract beacon address.\"},\"upgradeCollections(address)\":{\"notice\":\"Upgrades the NFT contract beacon.\"}},\"notice\":\"Interface for IP Registration Workflows.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol\":\"IRegistrationWorkflows\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@solady/=node_modules/solady/\",\":@story-protocol/=node_modules/@story-protocol/\",\":@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/\",\":@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/\",\":@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/\",\":ds-test/=node_modules/ds-test/src/\",\":erc6551/=node_modules/erc6551/\",\":forge-std/=node_modules/forge-std/src/\",\":solady/=node_modules/solady/\",\":wip/=node_modules/wip/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicenseTemplate.sol\":{\"keccak256\":\"0x40d87d67efc28863a02d649122e1bd841136a44462108f677d691fb973f760ed\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77b68e858c24b90cfd93e56a8ad8c30c9c3337885c9cc071c81512d813679b04\",\"dweb:/ipfs/QmVTMdLua1Qh7AVN5dZXZaacayuosAYfrpqDihMKbuZWHX\"]},\"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILicenseTemplate.sol\":{\"keccak256\":\"0x17249bb6a3ce59ec978552c55cf5a5b387012cec5f51d78916a52c4e96d7765a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://98a866063bac0bdca34ab4e4ebe1014b5b88d9c6140908da2442539820ea53a0\",\"dweb:/ipfs/QmdfycqUzwQpzqUwqS6MC9XbxZxg3wjX4ZTrRUgjKgSPU1\"]},\"node_modules/@story-protocol/protocol-core/contracts/lib/Licensing.sol\":{\"keccak256\":\"0xab5339d6fe04dcb1642f9a1558da9264017c3c87e8bb49fe3493d76ad04a2346\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d79b0d47a3afaf05bd4f4a3ef03dafcee06bd058bce91a50872c263b09938ced\",\"dweb:/ipfs/QmU2dPALX3EsCY1KR9RUHX2BQowKxfmHcWrbGMy8mHt6zy\"]},\"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/ISPGNFT.sol\":{\"keccak256\":\"0x8f868190031441217b5cc9e4d10b1402f003b890d62d3d57b3de78009be13a8e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://254b294ca44d23b1d1262adeca219398217ccbbc6896b7f305cfb68a9b691eb8\",\"dweb:/ipfs/Qma1Cpe6TtAJDWmJQ1gE6aVVdkk9KfaQGE75s7wtzFujjE\"]},\"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/story-nft/IERC7572.sol\":{\"keccak256\":\"0x718d1640dd118f6ca81e1eb8cf72bf9471584f40871ebb53fdd5de2dd050454e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99bc2317e8aeaaf7d6733d3eaaa55e33e91db62c67b20832d9db68ea6ea60404\",\"dweb:/ipfs/QmNY2u8LZ2TjzmPaQz7hepkhfaDXb9x5xYrYdY9KaKza5c\"]},\"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol\":{\"keccak256\":\"0x07c77b50e7a5aa22608f0b10766437af6f77dc8f3a4aa7022ae66b255c8dce81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b78ee163b356c94d6ff6ee92e556b9bdee0bee6720603ca9daf681840788bb5\",\"dweb:/ipfs/QmWX6ftqpDpt3pVRNZs5qkkJKKM9j6VnDzcahciakAgL4y\"]},\"node_modules/@story-protocol/protocol-periphery/contracts/lib/WorkflowStructs.sol\":{\"keccak256\":\"0x28ceb6958acbfa3366f4939bdc9b0d5a23389d029ec5b7bd920a4964b53c0320\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c9987f078d2a6db58b3015e2604edb02769e56d0f7b73a7c24394858273f8b6\",\"dweb:/ipfs/QmNgnieR1QZZzZKNNcLBP1ojUAy27QDL86vjJPXDjnjqsv\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"spgNftContract","type":"address","indexed":true}],"type":"event","name":"CollectionCreated","anonymous":false},{"inputs":[{"internalType":"struct ISPGNFT.InitParams","name":"spgNftInitParams","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"string","name":"baseURI","type":"string"},{"internalType":"string","name":"contractURI","type":"string"},{"internalType":"uint32","name":"maxSupply","type":"uint32"},{"internalType":"uint256","name":"mintFee","type":"uint256"},{"internalType":"address","name":"mintFeeToken","type":"address"},{"internalType":"address","name":"mintFeeRecipient","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"bool","name":"mintOpen","type":"bool"},{"internalType":"bool","name":"isPublicMinting","type":"bool"}]}],"stateMutability":"nonpayable","type":"function","name":"createCollection","outputs":[{"internalType":"address","name":"spgNftContract","type":"address"}]},{"inputs":[{"internalType":"address","name":"spgNftContract","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"struct WorkflowStructs.IPMetadata","name":"ipMetadata","type":"tuple","components":[{"internalType":"string","name":"ipMetadataURI","type":"string"},{"internalType":"bytes32","name":"ipMetadataHash","type":"bytes32"},{"internalType":"string","name":"nftMetadataURI","type":"string"},{"internalType":"bytes32","name":"nftMetadataHash","type":"bytes32"}]},{"internalType":"bool","name":"allowDuplicates","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"mintAndRegisterIp","outputs":[{"internalType":"address","name":"ipId","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"struct WorkflowStructs.IPMetadata","name":"ipMetadata","type":"tuple","components":[{"internalType":"string","name":"ipMetadataURI","type":"string"},{"internalType":"bytes32","name":"ipMetadataHash","type":"bytes32"},{"internalType":"string","name":"nftMetadataURI","type":"string"},{"internalType":"bytes32","name":"nftMetadataHash","type":"bytes32"}]},{"internalType":"struct WorkflowStructs.SignatureData","name":"sigMetadata","type":"tuple","components":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"registerIp","outputs":[{"internalType":"address","name":"ipId","type":"address"}]},{"inputs":[{"internalType":"address","name":"newNftContractBeacon","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setNftContractBeacon"},{"inputs":[{"internalType":"address","name":"newNftContract","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"upgradeCollections"}],"devdoc":{"kind":"dev","methods":{"createCollection((string,string,string,string,uint32,uint256,address,address,address,bool,bool))":{"params":{"spgNftInitParams":"The init params for the SPGNFT collection. See {ISPGNFT-InitParams}."},"returns":{"spgNftContract":"The address of the newly created SPGNFT collection."}},"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32),bool)":{"details":"Requires caller to have the minter role or the SPG NFT to allow public minting.","params":{"allowDuplicates":"Set to true to allow minting an NFT with a duplicate metadata hash. If a duplicate is found, returns existing token Id and IP Id instead of minting/registering a new one.","ipMetadata":"OPTIONAL. The desired metadata for the newly minted NFT and registered IP.","recipient":"The address of the recipient of the minted NFT.","spgNftContract":"The address of the SPGNFT collection."},"returns":{"ipId":"The ID of the registered IP.","tokenId":"The ID of the newly minted NFT."}},"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))":{"params":{"ipMetadata":"OPTIONAL. The desired metadata for the newly registered IP.","nftContract":"The address of the NFT collection.","sigMetadata":"OPTIONAL. Signature data for setAll (metadata) for the IP via the Core Metadata Module.","tokenId":"The ID of the NFT."},"returns":{"ipId":"The ID of the newly registered IP."}},"setNftContractBeacon(address)":{"details":"Restricted to be only callable by the protocol admin and upgrader.","params":{"newNftContractBeacon":"The address of the new NFT contract beacon."}},"upgradeCollections(address)":{"details":"Restricted to be only callable by the protocol admin and upgrader.","params":{"newNftContract":"The address of the new NFT contract implementation."}}},"version":1},"userdoc":{"kind":"user","methods":{"createCollection((string,string,string,string,uint32,uint256,address,address,address,bool,bool))":{"notice":"Creates a new NFT collection to be used by SPG."},"mintAndRegisterIp(address,address,(string,bytes32,string,bytes32),bool)":{"notice":"Mint an NFT from a SPGNFT collection and register it with metadata as an IP."},"registerIp(address,uint256,(string,bytes32,string,bytes32),(address,uint256,bytes))":{"notice":"Registers an NFT as IP with metadata."},"setNftContractBeacon(address)":{"notice":"Sets the NFT contract beacon address."},"upgradeCollections(address)":{"notice":"Upgrades the NFT contract beacon."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@solady/=node_modules/solady/","@story-protocol/=node_modules/@story-protocol/","@storyprotocol/core/=node_modules/@story-protocol/protocol-core/contracts/","@storyprotocol/periphery/=node_modules/@story-protocol/protocol-periphery/contracts/","@storyprotocol/test/=node_modules/@story-protocol/protocol-core/test/foundry/","ds-test/=node_modules/ds-test/src/","erc6551/=node_modules/erc6551/","forge-std/=node_modules/forge-std/src/","solady/=node_modules/solady/","wip/=node_modules/wip/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol":"IRegistrationWorkflows"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/access/IAccessControl.sol":{"keccak256":"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530","urls":["bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0","dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf"],"license":"MIT"},"node_modules/@openzeppelin/contracts/interfaces/IERC165.sol":{"keccak256":"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724","urls":["bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a","dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol":{"keccak256":"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261","urls":["bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11","dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"],"license":"MIT"},"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"keccak256":"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1","urls":["bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02","dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"],"license":"MIT"},"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8","urls":["bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621","dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"],"license":"MIT"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/ILicenseTemplate.sol":{"keccak256":"0x40d87d67efc28863a02d649122e1bd841136a44462108f677d691fb973f760ed","urls":["bzz-raw://77b68e858c24b90cfd93e56a8ad8c30c9c3337885c9cc071c81512d813679b04","dweb:/ipfs/QmVTMdLua1Qh7AVN5dZXZaacayuosAYfrpqDihMKbuZWHX"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-core/contracts/interfaces/modules/licensing/IPILicenseTemplate.sol":{"keccak256":"0x17249bb6a3ce59ec978552c55cf5a5b387012cec5f51d78916a52c4e96d7765a","urls":["bzz-raw://98a866063bac0bdca34ab4e4ebe1014b5b88d9c6140908da2442539820ea53a0","dweb:/ipfs/QmdfycqUzwQpzqUwqS6MC9XbxZxg3wjX4ZTrRUgjKgSPU1"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-core/contracts/lib/Licensing.sol":{"keccak256":"0xab5339d6fe04dcb1642f9a1558da9264017c3c87e8bb49fe3493d76ad04a2346","urls":["bzz-raw://d79b0d47a3afaf05bd4f4a3ef03dafcee06bd058bce91a50872c263b09938ced","dweb:/ipfs/QmU2dPALX3EsCY1KR9RUHX2BQowKxfmHcWrbGMy8mHt6zy"],"license":"BUSL-1.1"},"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/ISPGNFT.sol":{"keccak256":"0x8f868190031441217b5cc9e4d10b1402f003b890d62d3d57b3de78009be13a8e","urls":["bzz-raw://254b294ca44d23b1d1262adeca219398217ccbbc6896b7f305cfb68a9b691eb8","dweb:/ipfs/Qma1Cpe6TtAJDWmJQ1gE6aVVdkk9KfaQGE75s7wtzFujjE"],"license":"MIT"},"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/story-nft/IERC7572.sol":{"keccak256":"0x718d1640dd118f6ca81e1eb8cf72bf9471584f40871ebb53fdd5de2dd050454e","urls":["bzz-raw://99bc2317e8aeaaf7d6733d3eaaa55e33e91db62c67b20832d9db68ea6ea60404","dweb:/ipfs/QmNY2u8LZ2TjzmPaQz7hepkhfaDXb9x5xYrYdY9KaKza5c"],"license":"MIT"},"node_modules/@story-protocol/protocol-periphery/contracts/interfaces/workflows/IRegistrationWorkflows.sol":{"keccak256":"0x07c77b50e7a5aa22608f0b10766437af6f77dc8f3a4aa7022ae66b255c8dce81","urls":["bzz-raw://5b78ee163b356c94d6ff6ee92e556b9bdee0bee6720603ca9daf681840788bb5","dweb:/ipfs/QmWX6ftqpDpt3pVRNZs5qkkJKKM9j6VnDzcahciakAgL4y"],"license":"MIT"},"node_modules/@story-protocol/protocol-periphery/contracts/lib/WorkflowStructs.sol":{"keccak256":"0x28ceb6958acbfa3366f4939bdc9b0d5a23389d029ec5b7bd920a4964b53c0320","urls":["bzz-raw://9c9987f078d2a6db58b3015e2604edb02769e56d0f7b73a7c24394858273f8b6","dweb:/ipfs/QmNgnieR1QZZzZKNNcLBP1ojUAy27QDL86vjJPXDjnjqsv"],"license":"MIT"}},"version":1},"id":12}